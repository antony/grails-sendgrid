buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "2.0"
group "desirableobjects.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    compile 'com.github.groovy-wslite:groovy-wslite:0.8.0'
    testCompile "org.grails:grails-plugin-testing"
}

grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    githubSlug = 'https://github.com/antony/grails-sendgrid'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails SendGrid Plugin"
    desc = "Allows the sending of Email via SendGrid's services"
    developers = [antony:"Antony Jones", rpalcolea:"Roberto Perez Alcolea"]
    portalUser = ""
    portalPassword = ""    
}
